{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Create the AWS infrastructure to host and deploy a website generated by Jekyll",
  "Parameters": {
    "VPCID": {
      "Description": "ID of your existing VPC for deployment",
      "Type": "AWS::EC2::VPC::Id"
    },
    "PrivateSubnet1ID": {
      "Description": "ID of private subnet 1 in Availability Zone 1 for the Workload (e.g., subnet-a0246dcd)",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "PrivateSubnet2ID": {
      "Description": "ID of private subnet 2 in Availability Zone 2 for the Workload (e.g., subnet-a0246dcd)",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "NameS3BucketWebsite": {
      "Description": "Bucket name used to host the website",
      "Type": "String"
    },
    "NameS3BucketPipeline": {
      "Description": "Bucket name used by the AWS Code Pipeline",
      "Type": "String"
    },
    "WebsiteHostname": {
      "Description": "Hostname used by the website (e.g., blog.artec.cloud)",
      "Type": "String"
    },
    "CertificateArn": {
      "Description": "SSL Certificate ARN used by the CloudFront Distribution",
      "Type": "String"
    },
    "GithubOwner": {
      "Description": "Name of your GitHub account",
      "Type": "String"
    },
    "GithubRepo": {
      "Description": "Git repository name where your website code is hosted on GitHub",
      "Type": "String"
    },
    "GithubOAuthToken": {
      "Description": "Git repository OAuth2 Token",
      "Type": "String"
    }
  },
  "Resources": {
    "S3BucketWebsite": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {
          "Ref": "NameS3BucketWebsite"
        }
      }
    },
    "S3BucketPipeline": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {
          "Ref": "NameS3BucketPipeline"
        }
      }
    },
    "CloudFrontDistribution": {
      "DependsOn": ["S3BucketPipeline"],
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "DefaultCacheBehavior": {
            "ForwardedValues": {
              "QueryString": true
            },
            "TargetOriginId": {
              "Ref": "WebsiteHostname"
            },
            "ViewerProtocolPolicy": "https-only"
          },
          "Enabled": true,
          "DefaultRootObject": "index.html",
          "Origins": [
            {
              "DomainName": {
                "Fn::Sub": "${WebsiteHostname}.s3.amazonaws.com"
              },
              "Id": {
                "Ref": "WebsiteHostname"
              },
              "S3OriginConfig": {
                "OriginAccessIdentity": ""
              }
            }
          ],
          "ViewerCertificate": {
            "AcmCertificateArn": {
              "Ref": "CertificateArn"
            },
            "SslSupportMethod": "sni-only"
          }
        }
      }
    },
    "SgCodeBuild": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyStaticSiteGeneratorPipeline"
          }
        ],
        "VpcId": {
          "Ref": "VPCID"
        },
        "GroupDescription": "This security group is used to control access to the CodeBuild container",
        "SecurityGroupIngress": []
      }
    },
    "IamPolicyCodeBuild": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "This policy grants access to Code Build perform actions"
            ]
          ]
        },
        "ManagedPolicyName": "MyStaticSiteGeneratorCodeBuild",
        "Path": "/",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "Ec2Policy",
              "Effect": "Allow",
              "Action": [
                "ec2:CreateNetworkInterface",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DeleteNetworkInterface",
                "ec2:DescribeSubnets",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeDhcpOptions",
                "ec2:DescribeVpcs",
                "ec2:CreateNetworkInterfacePermission"
              ],
              "Resource": "*"
            },
            {
              "Sid": "CloudWatchLogsPolicy",
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams"
              ],
              "Resource": "arn:aws:logs:*:*:*"
            },
            {
              "Sid": "S3PipelineArtifacts",
              "Effect": "Allow",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:s3:::${S3BucketPipeline}/"
                },
                {
                  "Fn::Sub": "arn:aws:s3:::${S3BucketPipeline}/*"
                }
              ]
            },
            {
              "Sid": "S3WebsiteHosting",
              "Effect": "Allow",
              "Action": [
                "s3:PutObject"
              ],
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:s3:::${S3BucketWebsite}/"
                },
                {
                  "Fn::Sub": "arn:aws:s3:::${S3BucketWebsite}/*"
                }
              ]
            },
            {
              "Sid": "Cloudfront",
              "Effect": "Allow",
              "Action": [
                "cloudfront:CreateInvalidation"
              ],
              "Resource": {
                "Fn::Sub": "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}"
              }
            }
          ]
        }
      }
    },
    "IamRoleCodeBuild": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Ref": "IamPolicyCodeBuild"
          }
        ],
        "Path": "/",
        "RoleName": "MyStaticSiteGeneratorCodeBuild"
      }
    },
    "CodeBuildProject": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": [
            {
              "Name": "AWS_DEFAULT_REGION",
              "Value": {
                "Ref": "AWS::Region"
              }
            },
            {
              "Name": "S3_BUCKET_WEBSITE",
              "Value": {
                "Ref": "S3BucketWebsite"
              }
            },
            {
              "Name": "DISTRIBUTION_ID",
              "Value": {
                "Ref": "CloudFrontDistribution"
              }
            }
          ],
          "Image": "aws/codebuild/ruby:2.2.5",
          "Type": "LINUX_CONTAINER"
        },
        "Name": "MyStaticSiteGeneratorPipeline",
        "ServiceRole": {
          "Ref": "IamRoleCodeBuild"
        },
        "Source": {
          "Type": "CODEPIPELINE",
          "BuildSpec": "buildspec.yml"
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "SgCodeBuild"
            }
          ],
          "Subnets": [
            {
              "Ref": "PrivateSubnet1ID"
            },
            {
              "Ref": "PrivateSubnet2ID"
            }
          ],
          "VpcId": {
            "Ref": "VPCID"
          }
        }
      }
    },
    "IamPolicyPipeline": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "Description": "This policy grants access to a role used by Pipeline Example",
        "ManagedPolicyName": "MyStaticSiteGeneratorPipeline",
        "Path": "/",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "s3:GetObject",
                "s3:GetObjectVersion",
                "s3:GetBucketVersioning"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
                "Action": [
                    "s3:PutObject"
                ],
                "Resource": [
                    "arn:aws:s3:::codepipeline*",
                    "arn:aws:s3:::elasticbeanstalk*"
                ],
                "Effect": "Allow"
            },
            {
              "Action": [
                "s3:PutObject"
              ],
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:s3:::${S3BucketPipeline}"
                },
                {
                  "Fn::Sub": "arn:aws:s3:::${S3BucketPipeline}/*"
                }
              ],
              "Effect": "Allow"
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild"
              ],
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${CodeBuildProject}"
                },
                {
                  "Fn::Sub": "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:build/${CodeBuildProject}:*"
                }
              ],
              "Effect": "Allow"
            },
            {
              "Sid": "CloudWatchLogsPolicy",
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams"
              ],
              "Resource": "arn:aws:logs:*:*:*"
            }
          ]
        }
      }
    },
    "IamRolePipeline": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "RoleName": "MyStaticSiteGeneratorPipeline",
        "ManagedPolicyArns": [
          {
            "Ref": "IamPolicyPipeline"
          }
        ]
      }
    },
    "CodePipeline": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "Name": "MyStaticSiteGeneratorPipeline",
        "ArtifactStore": {
          "Location": {
            "Ref": "S3BucketPipeline"
          },
          "Type": "S3"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "IamRolePipeline",
            "Arn"
          ]
        },
        "Stages": [
          {
            "Name": "Stage1-GenerateArtifactFromSource",
            "Actions": [
              {
                "Name": "Source",
                "RunOrder": 1,
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Provider": "GitHub",
                  "Version": "1"
                },
                "Configuration": {
                  "Owner": {
                    "Ref": "GithubOwner"
                  },
                  "Repo": {
                    "Ref": "GithubRepo"
                  },
                  "Branch": "master",
                  "OAuthToken": {
                    "Ref": "GithubOAuthToken"
                  }
                },
                "OutputArtifacts": [
                  {
                    "Name": "source"
                  }
                ]
              }
            ]
          },
          {
            "Name": "Stage2-BuildAndDeploy",
            "Actions": [
              {
                "Name": "CodeBuild",
                "RunOrder": 2,
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "Configuration": {
                  "ProjectName": { "Ref": "CodeBuildProject" }
                },
                "InputArtifacts": [
                  {
                    "Name": "source"
                  }
                ],
                "OutputArtifacts": [
                  {
                    "Name": "buildapp"
                  }
                ]
              }
            ]
          }
        ]
      }
    }
  }
}
